docker build -t apb_project_api:10.0.0 .
docker tag apb_project_api:10.0.0 r4t00r/apb_project_api:10.0.0
docker push r4t00r/apb_project_api:10.0.0


kubectl exec -it api-postgresql-0 bash
kubectl exec -it api-deployment-d787b98d5-8pr89 bash

kubectl port-forward service/nginx-ingress-nginx-controller --address 0.0.0.0 80:80 

kubectl delete pvc pvc-pstgr-fixed
kubectl patch pvc pvc-pstgr-fixed -p '{"metadata":{"finalizers":null}}'
kubectl patch pvc pvc-pstgr-fixed -p '{\"metadata\":{\"finalizers\":null}}'
kubectl delete pv pv-pstgr-fixed

echo -n 'admin' | base64
kubectl patch pvc pvc-pstgr -p '{"metadata":{"finalizers":null}}'
kubectl delete pvc pvc-pstgr --grace-period=0 --force
chmod 700 data

command: ["/bin/sh","-c","psql -U $POSTGRES_USER --password -d $POSTGRES_DB -c 'CREATE TABLE IF NOT EXISTS games (id SERIAL PRIMARY KEY,title VARCHAR(255) NOT NULL,genre VARCHAR(255) NOT NULL,release_year INT NOT NULL);'"]
command: ["/bin/sh","-c","sleep 20 && PGPASSWORD=$POSTGRES_PASSWORD psql -w -d $POSTGRES_DB -U $POSTGRES_USER -c 'CREATE TABLE IF NOT EXISTS games (id SERIAL PRIMARY KEY,title VARCHAR(255) NOT NULL,genre VARCHAR(255) NOT NULL,release_year INT NOT NULL);'"]
command: ["/bin/sh","-c","sleep 20 && PGPASSWORD=$POSTGRES_PASSWORD psql -w -d $POSTGRES_DB -U $POSTGRES_USER -c 'CREATE DATABASE IF NOT EXISTS games;' && PGPASSWORD=$POSTGRES_PASSWORD psql -w -d games -U $POSTGRES_USER -c 'CREATE TABLE IF NOT EXISTS games (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, genre VARCHAR(255) NOT NULL, release_year INT NOT NULL);'"]


helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update
helm install nginx ingress-nginx --repo https://kubernetes.github.io/ingress-nginx

helm install nginx ingress-nginx/ingress-nginx -f values.yaml
helm install nginx ingress-nginx/ingress-nginx --set controller.publishService.enabled=true
helm install nginx ingress-nginx/ingress-nginx --set controller.service.type=LoadBalancer controller.publishService.enabled=true
helm get values nginx -a
kubectl create configmap init-script --from-file=init.sql
helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update
helm install nginx ingress-nginx/ingress-nginx -f values.yaml

kubectl delete -f api.yaml
kubectl apply -f api.yaml

kubectl delete -f api.yaml
kubectl delete -f db.yaml
kubectl apply -f api.yaml
kubectl apply -f db.yaml


final:

minikube start
minikube addons enable ingress
minikube ssh
sudo su
cd /mnt
chmod 777 data
minikube tunnel

helm install nginx ingress-nginx --repo https://kubernetes.github.io/ingress-nginx
kubectl apply -f init-map.yaml
kubectl apply -f pv.yaml
kubectl apply -f pvc.yaml
kubectl apply -f config-map.yaml
kubectl apply -f secret.yaml
kubectl apply -f postgres-secret.yaml
helm install api bitnami/postgresql -f values.yaml
kubectl apply -f api.yaml
kubectl apply -f ingress.yaml

